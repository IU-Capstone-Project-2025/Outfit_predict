# Production Environment Configuration Template
# Copy this file to .env in your project root and fill in your actual values

# ======================
# Database Configuration
# ======================
POSTGRES_HOST=db
POSTGRES_PORT=5432
POSTGRES_USER=outfit_user
POSTGRES_PASSWORD=CHANGE_ME_SECURE_DB_PASSWORD
POSTGRES_DB=outfit

# Connection URL (automatically constructed from above values)
DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}

# ======================
# MinIO Configuration (Object Storage)
# ======================
MINIO_ACCESS_KEY=CHANGE_ME_MINIO_ACCESS_KEY
MINIO_SECRET_KEY=CHANGE_ME_SECURE_MINIO_SECRET
MINIO_BUCKET_NAME=outfit-storage
MINIO_ENDPOINT=http://minio:9000

# ======================
# Qdrant Configuration (Vector Database)
# ======================
# Get these from https://qdrant.tech/
QDRANT_API_KEY=CHANGE_ME_QDRANT_API_KEY
QDRANT_HOST=CHANGE_ME_QDRANT_HOST
QDRANT_PORT=6333
QDRANT_COLLECTION_NAME=outfit_embeddings

# ======================
# Application URLs
# ======================
# Frontend public API URL (used by browser)
NEXT_PUBLIC_API_URL=https://outfitpredict.ru/api

# Backend internal API URL (used by services)
API_URL=http://backend:8000

# ======================
# Security & Authentication
# ======================
# Generate with: openssl rand -hex 32
SECRET_KEY=CHANGE_ME_RANDOM_SECRET_KEY_32_CHARS_MINIMUM

# JWT Configuration
JWT_SECRET=CHANGE_ME_JWT_SECRET_KEY
JWT_ALGORITHM=HS256
JWT_EXPIRATION_HOURS=24

# ======================
# CORS Configuration
# ======================
ALLOWED_ORIGINS=https://outfitpredict.ru,http://localhost:3000
ALLOWED_METHODS=GET,POST,PUT,DELETE,OPTIONS
ALLOWED_HEADERS=*

# ======================
# File Upload Configuration
# ======================
MAX_FILE_SIZE=10485760  # 10MB in bytes
ALLOWED_EXTENSIONS=jpg,jpeg,png,webp
UPLOAD_PATH=/tmp/uploads

# ======================
# ML Model Configuration
# ======================
MODEL_PATH=/usr/src/app/ml/models
YOLO_MODEL_PATH=/usr/src/app/ml/models/yolo11n.pt
CLIP_MODEL_NAME=ViT-B/32
DEVICE=cpu  # Set to 'cuda' if GPU available

# ======================
# Logging Configuration
# ======================
LOG_LEVEL=INFO
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s
LOG_FILE=/usr/src/app/logs/app.log

# ======================
# Performance Configuration
# ======================
# Worker processes for backend
WORKERS=4
WORKER_CLASS=uvicorn.workers.UvicornWorker
WORKER_CONNECTIONS=1000

# Cache configuration
REDIS_URL=redis://redis:6379/0  # Uncomment if using Redis
CACHE_TTL=3600  # 1 hour

# ======================
# Development vs Production
# ======================
ENVIRONMENT=production
DEBUG=false
RELOAD=false

# ======================
# Monitoring & Health Checks
# ======================
HEALTH_CHECK_ENDPOINT=/health
METRICS_ENDPOINT=/metrics

# ======================
# Email Configuration (Optional)
# ======================
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASSWORD=your-app-password
# SMTP_TLS=true

# ======================
# Backup Configuration
# ======================
BACKUP_SCHEDULE=0 2 * * *  # Daily at 2 AM
BACKUP_RETENTION_DAYS=7
BACKUP_PATH=/backups

# ======================
# SSL/TLS Configuration
# ======================
# If using HTTPS directly in containers (usually handled by nginx)
# SSL_CERT_PATH=/ssl/cert.pem
# SSL_KEY_PATH=/ssl/key.pem

# ======================
# Feature Flags
# ======================
ENABLE_REGISTRATION=true
ENABLE_PUBLIC_API=false
ENABLE_METRICS=true
ENABLE_DEBUG_TOOLBAR=false

# ======================
# Third-party Integrations
# ======================
# Google Analytics (if needed)
# GOOGLE_ANALYTICS_ID=G-XXXXXXXXXX

# Sentry for error tracking (if needed)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# ======================
# Container Specific
# ======================
# These are usually set by Docker Compose, but can be overridden
COMPOSE_PROJECT_NAME=outfit_predict
COMPOSE_HTTP_TIMEOUT=120
